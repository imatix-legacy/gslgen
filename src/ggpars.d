/*---------------------------------------------------------------------------*
 *  ggpars.d - LIBERO dialog data definitions for ggpars.c.                  *
 *  Generated by LIBERO 2.30 on 28 Feb, 2000, 15:02.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    abort_event = 0,
    after_event = 1,
    anomaly_event = 2,
    append_event = 3,
    arguments_event = 4,
    as_event = 5,
    assign_event = 6,
    before_event = 7,
    bracketed_identifier_event = 8,
    by_event = 9,
    call_event = 10,
    close_event = 11,
    close_bracket_event = 12,
    close_comment_event = 13,
    comment_event = 14,
    continue_attribute_event = 15,
    continue_scope_event = 16,
    continue_scope_or_attribute_event = 17,
    copy_event = 18,
    default_operator_event = 19,
    define_event = 20,
    delete_event = 21,
    direct_event = 22,
    echo_event = 23,
    else_event = 24,
    elsif_event = 25,
    empty_stack_event = 26,
    end_for_event = 27,
    end_function_event = 28,
    end_if_event = 29,
    end_macro_event = 30,
    end_new_event = 31,
    end_of_file_event = 32,
    end_of_line_event = 33,
    end_template_event = 34,
    end_while_event = 35,
    error_event = 36,
    expression_event = 37,
    extend_event = 38,
    for_event = 39,
    from_event = 40,
    function_event = 41,
    gsl_event = 42,
    identifier_event = 43,
    if_event = 44,
    implicit_assign_or_invoke_event = 45,
    include_event = 46,
    incoming_event = 47,
    invoke_event = 48,
    javascript_event = 49,
    last_event = 50,
    literal_event = 51,
    load_event = 52,
    locator_event = 53,
    macro_event = 54,
    macro_args_event = 55,
    member_event = 56,
    modifier_event = 57,
    move_event = 58,
    new_event = 59,
    next_event = 60,
    next_arg_event = 61,
    no_bracket_event = 62,
    number_event = 63,
    open_event = 64,
    open_bracket_event = 65,
    open_comment_event = 66,
    operand_event = 67,
    operator_event = 68,
    other_event = 69,
    output_event = 70,
    point_event = 71,
    quote_event = 72,
    quoted_event = 73,
    return_event = 74,
    save_event = 75,
    script_event = 76,
    sign_event = 77,
    simple_operand_event = 78,
    sort_event = 79,
    spaces_event = 80,
    substitute_event = 81,
    template_event = 82,
    text_event = 83,
    to_event = 84,
    unary_operator_event = 85,
    where_event = 86,
    while_event = 87,
    xml_event = 88
};

enum {
    _LR_defaults_state = 50,
    _LR_STATE_after_init = 0,
    _LR_STATE_allow_text = 1,
    _LR_STATE_expect_text = 2,
    _LR_STATE_expect_operand = 3,
    _LR_STATE_after_sign = 4,
    _LR_STATE_after_sign_point = 5,
    _LR_STATE_after_point = 6,
    _LR_STATE_after_number = 7,
    _LR_STATE_after_number_point = 8,
    _LR_STATE_allow_operand = 9,
    _LR_STATE_continue_comment = 10,
    _LR_STATE_continue_quoted = 11,
    _LR_STATE_expect_number = 12,
    _LR_STATE_allow_number = 13,
    _LR_STATE_expect_signed_number = 14,
    _LR_STATE_identifier_superstate = 15,
    _LR_STATE_expect_identifier = 16,
    _LR_STATE_allow_identifier = 17,
    _LR_STATE_continue_identifier = 18,
    _LR_STATE_expect_bracketed_identifier = 19,
    _LR_STATE_continue_bracketed_identifier = 20,
    _LR_STATE_scope_superstate = 21,
    _LR_STATE_expect_scope = 22,
    _LR_STATE_allow_scope = 23,
    _LR_STATE_continue_scope = 24,
    _LR_STATE_scope_attribute_superstate = 25,
    _LR_STATE_continue_scope_or_attribute = 26,
    _LR_STATE_expect_scope_attribute = 27,
    _LR_STATE_continue_attribute = 28,
    _LR_STATE_expect_operator = 29,
    _LR_STATE_after_simple_operand = 30,
    _LR_STATE_expect_arguments = 31,
    _LR_STATE_expect_substitute = 32,
    _LR_STATE_expect_modifier = 33,
    _LR_STATE_expect_script = 34,
    _LR_STATE_expect_assign_or_args = 35,
    _LR_STATE_expect_assign = 36,
    _LR_STATE_after_macro = 37,
    _LR_STATE_allow_macro_args = 38,
    _LR_STATE_expect_macro_args = 39,
    _LR_STATE_expect_argument = 40,
    _LR_STATE_expect_invoke_args = 41,
    _LR_STATE_expect_locator = 42,
    _LR_STATE_expect_source = 43,
    _LR_STATE_expect_save = 44,
    _LR_STATE_expect_new = 45,
    _LR_STATE_expect_for = 46,
    _LR_STATE_expect_sort = 47,
    _LR_STATE_expect_end_of_line = 48,
    _LR_STATE_returning = 49,
    _LR_STATE_defaults = 50
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

static event_t
    _LR_stack [20];                     /*  Subdialog call stack             */

static int
    _LR_stack_size;                     /*  Subdialog stack size; 0=empty    */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE read_script_line                 (void);
MODULE generate_script_exception        (void);
MODULE get_template_token               (void);
MODULE generate_comment_exception       (void);
MODULE generate_text_exception          (void);
MODULE get_script_command_token         (void);
MODULE push_expression_state            (void);
MODULE get_expression_token             (void);
MODULE insert_comment_node              (void);
MODULE commit_memory_allocations        (void);
MODULE terminate_the_program            (void);
MODULE signal_unexpected_end_of_file    (void);
MODULE rollback_memory_allocations      (void);
MODULE insert_text_node                 (void);
MODULE count_token_length               (void);
MODULE push_text_state                  (void);
MODULE push_substitute_state            (void);
MODULE insert_substitute_node           (void);
MODULE ready_for_op1_field              (void);
MODULE insert_spaces_only_node          (void);
MODULE set_extend_flag                  (void);
MODULE return_to_root_node              (void);
MODULE push_quote_character             (void);
MODULE push_operand_state               (void);
MODULE insert_literal_node              (void);
MODULE count_spaces_and_token_length    (void);
MODULE get_quoted_token                 (void);
MODULE save_the_sign                    (void);
MODULE insert_unary_operator_node       (void);
MODULE ready_for_op2_field              (void);
MODULE insert_number_node               (void);
MODULE push_simple_operand_state        (void);
MODULE push_continue_scope_or_attribute_state (void);
MODULE insert_symbol_node               (void);
MODULE get_bracketed_identifier_token   (void);
MODULE push_continue_attribute_state    (void);
MODULE push_continue_scope_state        (void);
MODULE insert_member_node               (void);
MODULE insert_unknown_operand_node      (void);
MODULE add_one_bracket                  (void);
MODULE get_comment_token                (void);
MODULE dialog_call                      (void);
MODULE copy_the_operator                (void);
MODULE restore_the_sign                 (void);
MODULE rewind_to_same_token             (void);
MODULE signal_internal_error            (void);
MODULE return_to_operand                (void);
MODULE pop_previous_state               (void);
MODULE insert_empty_text_node           (void);
MODULE return_one_more                  (void);
MODULE push_identifier_state            (void);
MODULE change_operand_to_symbol_node    (void);
MODULE return_to_expression             (void);
MODULE dialog_return                    (void);
MODULE push_quoted_state                (void);
MODULE set_line_break_flag              (void);
MODULE push_bracketed_identifier_state  (void);
MODULE return_to_scope                  (void);
MODULE move_op1_to_op2                  (void);
MODULE insert_operator_node             (void);
MODULE close_one_bracket                (void);
MODULE change_to_call_node              (void);
MODULE push_call_state                  (void);
MODULE push_arguments_state             (void);
MODULE ready_for_op3_field              (void);
MODULE return_to_arguments              (void);
MODULE ready_for_modifier_field         (void);
MODULE get_modifier_token               (void);
MODULE confirm_modifier_specified       (void);
MODULE push_modifier_state              (void);
MODULE insert_empty_node_if_needed      (void);
MODULE insert_close_node                (void);
MODULE insert_else_node                 (void);
MODULE insert_end_if_node               (void);
MODULE insert_end_for_node              (void);
MODULE insert_end_macro_node            (void);
MODULE insert_end_function_node         (void);
MODULE insert_end_new_node              (void);
MODULE insert_end_while_node            (void);
MODULE insert_output_node               (void);
MODULE insert_append_node               (void);
MODULE insert_echo_node                 (void);
MODULE insert_abort_node                (void);
MODULE push_define_state                (void);
MODULE insert_define_node               (void);
MODULE push_implicit_assign_or_invoke_state (void);
MODULE push_macro_state                 (void);
MODULE insert_macro_node                (void);
MODULE insert_function_node             (void);
MODULE insert_return_node               (void);
MODULE push_invoke_state                (void);
MODULE insert_call_node                 (void);
MODULE insert_gsl_node                  (void);
MODULE insert_source_node               (void);
MODULE get_script_token                 (void);
MODULE insert_direct_node               (void);
MODULE insert_javascript_node           (void);
MODULE push_xml_state                   (void);
MODULE insert_xml_node                  (void);
MODULE insert_template_node             (void);
MODULE insert_end_template_node         (void);
MODULE push_save_state                  (void);
MODULE insert_save_node                 (void);
MODULE insert_if_node                   (void);
MODULE insert_elsif_node                (void);
MODULE push_locator_state               (void);
MODULE insert_new_node                  (void);
MODULE insert_move_node                 (void);
MODULE insert_copy_node                 (void);
MODULE push_load_state                  (void);
MODULE insert_delete_node               (void);
MODULE push_for_state                   (void);
MODULE insert_for_node                  (void);
MODULE insert_while_node                (void);
MODULE insert_next_node                 (void);
MODULE insert_last_node                 (void);
MODULE push_sort_state                  (void);
MODULE insert_sort_node                 (void);
MODULE ready_for_pretty_field           (void);
MODULE ready_for_format_field           (void);
MODULE push_new_state                   (void);
MODULE expect_end_of_line               (void);
MODULE error_if_empty_expression        (void);
MODULE return_to_operator               (void);
MODULE signal_invalid_token             (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][89] =
{
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,9,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,1,1,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,16,0,0
     ,0,0,0,0,7,3,19,10,0,0,0,0,6,11,0,3,0,0,4,0,0,3,3,0,0,0,3,0
     ,0,0
    },
    { 3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     ,3,3,3,3,3,3,4,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     ,3,3,3,7,3,3,3,3,3,3,3,5,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3
    },
    { 6,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6
     ,6,6,6,6,6,6,5,6,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6
     ,6,6,6,49,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,6,6,6,6,6,6,6,6
    },
    { 49,49,6,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,6,49,6,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,19,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,6,3,49,49,49,49,49,49,49
    },
    { 49,49,7,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,7,49,7,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,8,49,49,7,49,49,49,49,49,7
     ,49,49,49,49,49,49,49,49
    },
    { 49,49,8,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,8,49,8,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,19,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,8,3,49,49,49,49,49,49,49
    },
    { 49,49,9,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,9,49,9,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,16,49,49,49
     ,49,49,49,7,9,19,10,49,49,49,49,6,11,49,9,49,49,4,49,49,9,9
     ,49,49,49,9,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,11,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,3,0,11,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,49,0,0,10,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0
     ,0,0
    },
    { 49,49,13,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,13,49,13,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,49,49,49,13,49,49,49,49,49
     ,13,49,49,49,49,49,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,49,0,0,10,0,0,0,0,0,0,0,14,0,0,0,0,0,14,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,19,10,0,0,0,0,0,0,0,16,0,0,0,0,0,16,3,0,0,0,0,0
     ,0,0
    },
    { 49,49,17,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,17,49,17,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,19,10,49,49,49,49,49,49,49,17,49,49,49,49,49
     ,17,3,49,49,49,49,49,49,49
    },
    { 49,49,18,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,49,49,49,49
     ,49,49,49,18,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,3,49,49,49,49,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,21,0,0,0,0,0,21,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,16,0
     ,0,0,0,0,0,24,0,19,10,0,0,0,0,49,0,0,22,0,0,14,0,0,22,3,0,0
     ,0,0,0,0,0
    },
    { 49,49,23,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,23,49,23,49
     ,49,49,49,49,49,49,49,49,49,49,49,18,49,49,49,49,16,49,49,49
     ,49,49,49,24,49,19,10,49,49,49,49,49,49,49,23,49,49,14,49,49
     ,23,3,49,49,49,49,49,49,49
    },
    { 49,49,24,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,24,49,24,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,16,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,49,49,49,24,49,49,49,49,49
     ,24,49,49,49,49,49,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,25,0,0,0,0,0,25,0,0,0,0,0,0
     ,0,0
    },
    { 49,49,26,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,26,49,26,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,16,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,17,49,49,26,49,49,49,49,49
     ,26,49,49,49,49,49,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,16,0
     ,0,0,0,0,0,26,0,19,10,0,0,0,0,17,0,0,27,0,0,14,0,0,27,3,0,0
     ,0,0,0,0,0
    },
    { 49,49,28,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,28,49,28,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,17,49,49,28,49,49,49,49,49
     ,28,49,49,49,49,49,49,49,49
    },
    { 49,49,29,49,49,49,49,49,49,49,49,29,49,49,49,49,49,49,49,9
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,29,49,29,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,10,49,3,49,49,49,49,49,29,49,49,3,49,49
     ,29,49,49,49,49,3,49,49,49
    },
    { 49,49,30,49,49,49,49,49,49,49,49,30,49,49,49,49,49,49,49,9
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,30,49,30,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,9,49,10,49,3,49,49,49,49,49,30,49,49,3,49,49,30
     ,49,49,49,49,3,49,49,49
    },
    { 0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,9,0,0,0,0,10,0,0,0,0,0,0,0,31,0,0,0,0,0,31,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    },
    { 32,32,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
     ,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,32,33,32
     ,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
     ,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
     ,32,3,32,33,32,32,32,32,32
    },
    { 9,0,0,3,0,0,0,0,0,0,0,34,0,0,34,0,0,0,23,0,27,23,43,3,34,3,0
     ,34,34,34,34,34,0,34,34,34,0,0,0,27,0,16,43,0,3,0,3,0,16,43
     ,34,18,3,0,16,0,16,0,23,22,34,0,0,26,0,19,10,0,0,0,3,17,0,0
     ,34,22,0,14,0,27,0,3,13,0,0,0,0,3,42
    },
    { 0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,9,0,10,0,0,0,0,0,0,0,35,0,0,0,0,0,35,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,36,0,0,0,0,0,36,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,37,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,38,0,10,0,0,0,0,0,0,0,37,0,0,0,0,0,37,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,38,0,0,0,0,0,38,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,40,0,0,0,0,10,0,0,0,0,0,0,0,39,0,0,0,0,0,39,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,40,0,0,0,0,0,40,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,41,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,9,0,10,0,0,0,0,0,0,0,41,0,0,0,0,0,41,0,0,0,0,0,0
     ,0,0
    },
    { 49,22,42,49,49,16,49,22,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,42,49,42,49
     ,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49
     ,49,49,49,49,49,49,10,49,49,49,49,49,49,49,42,49,49,49,49,49
     ,42,49,49,49,22,49,49,49,49
    },
    { 3,3,43,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
     ,3,3,3,3,3,3,43,3,43,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3
     ,3,3,3,3,3,3,3,10,3,3,3,3,3,3,3,43,3,3,3,3,3,43,3,3,3,3,3,3
     ,3,3
    },
    { 0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,44,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,44,0,0,0,0,0,44,0,0,0,0,0,0
     ,0,0
    },
    { 0,16,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,45,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,45,0,0,0,0,0,45,0,0,0,0,0
     ,0,0,0
    },
    { 0,0,0,0,0,16,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,46,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,46,0,0,0,0,0,46,0,0,0,0,0,9
     ,0,0
    },
    { 0,0,0,0,0,16,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,47,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,47,0,0,0,0,0,47,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,48,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,48,0,0,0,0,0,48,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,31,0,0,0,19,0,29,0,0,0,0,28,24,26,0,0,36,0,0,0,0,0
     ,48,0,0,0,0,0,0,0,0,0,0,49,0,46,0,0,0,18,0,35,0,0,41,0,0,0
     ,42,42,37,39,0,33,0,45,0,0,0,0,0,0,0,29,0,0,0,0,0,11,0,44,0
     ,0,30,47,0,32,0,1,0,0,0,0,43
    },
    { 50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50
     ,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50
     ,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50
     ,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50
     ,50,50,50,50,50,50,50,50,50
    }
};

static dbyte _LR_action [][89] =
{
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,7,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,1,5,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,11,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,19,0
     ,0,0,0,0,0,15,21,18,24,0,0,0,0,16,12,0,22,0,0,13,0,0,22,20,0
     ,0,0,14,0,0,0
    },
    { 28,28,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
     ,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,27,28,23,28
     ,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28
     ,28,28,28,25,28,28,28,28,28,28,28,16,28,28,28,28,28,28,28,28
     ,22,28,28,28,28,28,28,28,28
    },
    { 30,30,26,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
     ,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,27,30,23,30
     ,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
     ,30,30,30,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
     ,22,30,30,30,30,30,30,30,30
    },
    { 35,35,26,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35
     ,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,27,35,23,35
     ,35,35,35,35,35,35,35,35,35,35,35,32,35,35,35,35,35,35,35,35
     ,35,35,35,31,35,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35
     ,22,33,35,35,35,35,35,35,35
    },
    { 37,37,26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,27,37,23,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,24,37,37,37,37,36,37,37,22,37,37,37,37,37
     ,22,37,37,37,37,37,37,37,37
    },
    { 37,37,26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,27,37,23,37
     ,37,37,37,37,37,37,37,37,37,37,37,39,37,37,37,37,37,37,37,37
     ,37,37,37,38,37,41,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,22,40,37,37,37,37,37,37,37
    },
    { 42,42,26,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
     ,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,27,42,23,42
     ,42,42,42,42,42,42,42,42,42,42,42,17,42,42,42,42,19,42,42,42
     ,42,42,42,15,21,18,24,42,42,42,42,16,12,42,22,42,42,13,42,42
     ,22,20,42,42,42,14,42,42,42
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,50,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,47,0,46,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,51,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 37,37,26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,27,37,23,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,51,37,37,24,37,37,37,37,37,37,37,22,37,37,37,37,37
     ,22,37,37,37,37,37,37,37,37
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,52,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,55,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,54,0,0,0,0
     ,0,0,0
    },
    { 37,37,26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,27,37,23,37
     ,37,37,37,37,37,37,37,37,37,37,37,53,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,55,24,37,37,37,37,37,37,37,22,37,37,37,37,37
     ,22,54,37,37,37,37,37,37,37
    },
    { 37,37,26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,27,37,37,37
     ,37,37,37,37,37,37,37,37,37,37,37,53,37,37,37,37,37,37,37,37
     ,37,37,37,53,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37
     ,37,54,37,37,37,37,37,37,37
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,0,0,0,0
     ,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0
     ,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,0,0,59,0
     ,0,0,0,0,0,53,0,61,24,0,0,0,0,60,0,0,22,0,0,63,0,0,22,64,0,0
     ,0,0,0,0,0
    },
    { 65,65,26,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65
     ,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,27,65,23,65
     ,65,65,65,65,65,65,65,65,65,65,65,62,65,65,65,65,59,65,65,65
     ,65,65,65,53,65,61,24,65,65,65,65,60,65,65,22,65,65,63,65,65
     ,22,64,65,65,65,65,65,65,65
    },
    { 65,65,26,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65
     ,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,27,65,23,65
     ,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,59,65,65,65
     ,65,65,65,65,65,65,24,65,65,65,65,65,65,65,22,65,65,65,65,65
     ,22,65,65,65,65,65,65,65,65
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0
     ,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 68,68,26,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68
     ,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,27,68,23,68
     ,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,66,68,68,68
     ,68,68,68,68,68,68,24,68,68,68,68,67,68,68,22,68,68,68,68,68
     ,22,68,68,68,68,68,68,68,68
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,71,0,0,0,0,66,0
     ,0,0,0,0,0,53,0,70,24,0,0,0,0,69,0,0,22,0,0,73,0,0,22,72,0,0
     ,0,0,0,0,0
    },
    { 65,65,26,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65
     ,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,27,65,23,65
     ,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65
     ,65,65,65,65,65,65,24,65,65,65,65,67,65,65,22,65,65,65,65,65
     ,22,65,65,65,65,65,65,65,65
    },
    { 42,42,26,42,42,42,42,42,42,42,42,75,42,42,42,42,42,42,42,74
     ,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,27,42,23,42
     ,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
     ,42,42,42,42,42,42,24,42,74,42,42,42,42,42,22,42,42,74,42,42
     ,22,42,42,42,42,74,42,42,42
    },
    { 42,42,26,42,42,42,42,42,42,42,42,75,42,42,42,42,42,42,42,74
     ,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,27,42,23,42
     ,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42
     ,42,42,42,42,76,42,24,42,74,42,42,42,42,42,22,42,42,74,42,42
     ,22,42,42,42,42,74,42,42,42
    },
    { 0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,77,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,0
     ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    },
    { 84,84,26,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84
     ,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,27,84,81,84
     ,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84
     ,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84
     ,84,83,84,82,84,84,84,84,84
    },
    { 96,0,0,94,0,0,0,0,0,0,0,85,0,0,6,0,0,0,121,0,97,123,111,95
     ,86,118,0,88,90,87,89,91,0,6,115,92,0,0,0,124,0,106,110,0
     ,117,0,109,0,108,112,127,98,122,0,105,0,102,0,120,119,126,0
     ,0,103,0,99,24,0,0,0,93,101,0,0,129,116,0,104,0,128,0,100
     ,114,0,0,0,0,125,113
    },
    { 0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,131,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0,0,0
     ,0,0,0,0,0
    },
    { 0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0,0,0,0
     ,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,135,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,134,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0
     ,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0
     ,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,137,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0
     ,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,135,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,138,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0
     ,0,0,0,0
    },
    { 143,141,26,143,143,142,143,140,143,143,143,143,143,143,143
     ,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143
     ,143,143,143,143,143,143,27,143,133,143,143,143,143,143,143
     ,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143
     ,143,143,143,143,143,143,24,143,143,143,143,143,143,143,132
     ,143,143,143,143,143,132,143,143,143,139,143,143,143,143
    },
    { 146,146,26,146,146,146,146,146,146,146,146,146,146,146,146
     ,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146
     ,146,146,146,146,146,146,27,146,133,146,144,146,146,146,146
     ,146,146,145,146,146,146,146,146,146,146,146,146,146,146,146
     ,146,146,146,146,146,146,24,146,146,146,146,146,146,146,132
     ,146,146,146,146,146,132,146,146,146,146,146,146,146,146
    },
    { 0,0,0,0,0,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,135,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0,0,0
     ,0,0,0,0,0
    },
    { 0,150,0,0,0,148,0,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,135,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0
     ,0,0,0,0,0,0,0
    },
    { 0,0,0,0,0,151,0,0,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,135,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0,0
     ,0,0,0,152,0,0
    },
    { 0,0,0,0,0,154,0,0,0,155,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,135,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,132,0,0,0,0,0,132,0,0
     ,0,0,0,0,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,156,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     ,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,22,0,0,0,0,0,22,0,0,0,0
     ,0,0,0,0
    },
    { 0,0,0,0,22,0,0,0,160,0,163,0,0,0,0,22,22,22,0,0,162,0,0,0,0
     ,0,167,0,0,0,0,0,0,0,0,0,0,157,0,162,0,0,0,22,0,162,0,0,163
     ,0,0,0,165,162,163,22,0,164,0,162,0,0,0,0,0,0,0,159,0,0,0,0
     ,0,161,0,162,0,0,159,162,0,158,0,5,0,0,0,0,166
    },
    { 168,168,26,168,168,168,168,168,168,168,168,168,168,168,168
     ,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168
     ,168,168,7,168,168,168,27,168,168,168,168,168,168,168,168
     ,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168
     ,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168
     ,168,168,168,168,168,168,168,168,168,168,168,168,168,168
    }
};

static dbyte _LR_vector [][11+1] =
{
    {0},
    {0,1,2,_LR_STOP},
    {0,1,3,4,5,_LR_STOP},
    {6,7,_LR_STOP},
    {3,5,_LR_STOP},
    {2,_LR_STOP},
    {8,9,10,_LR_STOP},
    {11,12,10,_LR_STOP},
    {13,14,2,_LR_STOP},
    {15,16,17,14,18,7,_LR_STOP},
    {19,20,21,9,10,_LR_STOP},
    {19,21,9,10,_LR_STOP},
    {22,23,24,25,18,26,_LR_STOP},
    {27,14,7,_LR_STOP},
    {28,14,29,7,_LR_STOP},
    {23,30,18,13,14,7,_LR_STOP},
    {23,14,7,_LR_STOP},
    {31,32,33,18,13,14,7,_LR_STOP},
    {31,32,33,14,18,34,_LR_STOP},
    {23,35,36,33,18,37,25,29,7,_LR_STOP},
    {31,32,38,18,16,17,14,18,7,_LR_STOP},
    {39,14,7,_LR_STOP},
    {7,_LR_STOP},
    {0,7,_LR_STOP},
    {40,41,_LR_STOP},
    {23,30,42,18,13,14,7,_LR_STOP},
    {45,12,10,_LR_STOP},
    {12,10,_LR_STOP},
    {43,28,29,44,7,_LR_STOP},
    {30,42,29,13,14,46,47,_LR_STOP},
    {28,29,23,44,7,_LR_STOP},
    {30,29,13,14,46,47,_LR_STOP},
    {33,18,48,49,29,13,14,7,_LR_STOP},
    {50,16,33,18,48,49,29,17,14,18,7,_LR_STOP},
    {33,18,48,49,29,14,34,_LR_STOP},
    {33,18,48,49,44,47,_LR_STOP},
    {49,25,7,_LR_STOP},
    {46,44,47,_LR_STOP},
    {29,13,14,46,47,_LR_STOP},
    {51,29,13,14,7,_LR_STOP},
    {50,16,51,29,17,14,18,7,_LR_STOP},
    {51,29,14,34,_LR_STOP},
    {52,44,47,_LR_STOP},
    {53,_LR_STOP},
    {0,40,_LR_STOP},
    {40,_LR_STOP},
    {13,14,26,_LR_STOP},
    {54,16,17,14,18,7,_LR_STOP},
    {19,46,49,25,47,_LR_STOP},
    {0,26,_LR_STOP},
    {19,55,0,26,_LR_STOP},
    {30,18,13,14,46,47,_LR_STOP},
    {13,42,14,46,47,_LR_STOP},
    {13,14,7,_LR_STOP},
    {50,16,17,14,18,7,_LR_STOP},
    {25,34,_LR_STOP},
    {13,14,34,_LR_STOP},
    {56,16,17,14,18,7,_LR_STOP},
    {14,46,47,_LR_STOP},
    {57,36,37,25,29,7,_LR_STOP},
    {48,57,47,_LR_STOP},
    {36,14,34,_LR_STOP},
    {36,13,14,7,_LR_STOP},
    {36,27,14,7,_LR_STOP},
    {36,16,17,14,18,7,_LR_STOP},
    {57,44,47,_LR_STOP},
    {35,36,37,25,29,7,_LR_STOP},
    {57,49,51,25,29,7,_LR_STOP},
    {57,49,58,44,47,_LR_STOP},
    {48,49,14,29,7,_LR_STOP},
    {32,14,34,_LR_STOP},
    {32,13,14,7,_LR_STOP},
    {32,16,17,14,18,7,_LR_STOP},
    {32,27,14,7,_LR_STOP},
    {59,25,29,7,_LR_STOP},
    {60,25,7,_LR_STOP},
    {61,62,63,64,14,7,_LR_STOP},
    {65,59,25,29,63,7,_LR_STOP},
    {25,65,47,_LR_STOP},
    {25,66,67,_LR_STOP},
    {25,47,_LR_STOP},
    {0,67,_LR_STOP},
    {13,14,67,_LR_STOP},
    {68,69,16,17,14,18,7,_LR_STOP},
    {70,46,49,44,67,_LR_STOP},
    {71,9,10,_LR_STOP},
    {72,9,10,_LR_STOP},
    {73,9,10,_LR_STOP},
    {74,9,10,_LR_STOP},
    {75,9,10,_LR_STOP},
    {76,9,10,_LR_STOP},
    {77,9,10,_LR_STOP},
    {78,9,10,_LR_STOP},
    {79,18,7,_LR_STOP},
    {80,18,7,_LR_STOP},
    {81,18,7,_LR_STOP},
    {82,18,7,_LR_STOP},
    {83,84,18,7,_LR_STOP},
    {85,32,84,18,13,14,7,_LR_STOP},
    {85,32,84,14,18,34,_LR_STOP},
    {85,32,84,18,16,17,14,18,7,_LR_STOP},
    {83,84,14,18,48,49,29,7,_LR_STOP},
    {83,35,36,84,18,37,25,29,7,_LR_STOP},
    {83,84,18,13,14,7,_LR_STOP},
    {83,32,84,18,27,14,7,_LR_STOP},
    {86,87,18,7,_LR_STOP},
    {86,88,18,7,_LR_STOP},
    {89,18,7,_LR_STOP},
    {90,91,29,7,_LR_STOP},
    {92,18,93,18,7,_LR_STOP},
    {92,18,94,_LR_STOP},
    {95,18,94,_LR_STOP},
    {96,18,94,_LR_STOP},
    {97,98,94,_LR_STOP},
    {99,18,7,_LR_STOP},
    {100,9,10,_LR_STOP},
    {101,102,18,7,_LR_STOP},
    {103,18,7,_LR_STOP},
    {104,18,7,_LR_STOP},
    {105,106,18,7,_LR_STOP},
    {105,107,18,7,_LR_STOP},
    {105,108,18,7,_LR_STOP},
    {109,98,18,93,18,7,_LR_STOP},
    {110,18,7,_LR_STOP},
    {111,112,18,7,_LR_STOP},
    {113,18,7,_LR_STOP},
    {114,9,10,_LR_STOP},
    {115,9,10,_LR_STOP},
    {116,117,18,7,_LR_STOP},
    {5,_LR_STOP},
    {42,25,64,7,_LR_STOP},
    {61,63,64,14,7,_LR_STOP},
    {94,_LR_STOP},
    {0,94,_LR_STOP},
    {25,29,7,_LR_STOP},
    {21,9,10,_LR_STOP},
    {25,21,7,_LR_STOP},
    {59,14,29,7,_LR_STOP},
    {63,64,25,7,_LR_STOP},
    {105,29,7,_LR_STOP},
    {105,118,7,_LR_STOP},
    {105,119,7,_LR_STOP},
    {105,64,7,_LR_STOP},
    {44,47,_LR_STOP},
    {93,18,7,_LR_STOP},
    {93,29,2,_LR_STOP},
    {44,7,_LR_STOP},
    {29,7,_LR_STOP},
    {120,64,7,_LR_STOP},
    {120,118,7,_LR_STOP},
    {120,119,7,_LR_STOP},
    {111,64,7,_LR_STOP},
    {111,118,7,_LR_STOP},
    {111,119,7,_LR_STOP},
    {116,64,7,_LR_STOP},
    {116,119,7,_LR_STOP},
    {9,10,_LR_STOP},
    {121,21,122,9,10,_LR_STOP},
    {49,67,_LR_STOP},
    {123,7,_LR_STOP},
    {34,_LR_STOP},
    {26,_LR_STOP},
    {49,94,_LR_STOP},
    {49,7,_LR_STOP},
    {67,_LR_STOP},
    {49,49,94,_LR_STOP},
    {18,94,_LR_STOP},
    {21,7,_LR_STOP},
    {124,12,10,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    read_script_line,
    generate_script_exception,
    get_template_token,
    generate_comment_exception,
    generate_text_exception,
    get_script_command_token,
    push_expression_state,
    get_expression_token,
    insert_comment_node,
    commit_memory_allocations,
    terminate_the_program,
    signal_unexpected_end_of_file,
    rollback_memory_allocations,
    insert_text_node,
    count_token_length,
    push_text_state,
    push_substitute_state,
    insert_substitute_node,
    ready_for_op1_field,
    insert_spaces_only_node,
    set_extend_flag,
    return_to_root_node,
    push_quote_character,
    push_operand_state,
    insert_literal_node,
    count_spaces_and_token_length,
    get_quoted_token,
    save_the_sign,
    insert_unary_operator_node,
    ready_for_op2_field,
    insert_number_node,
    push_simple_operand_state,
    push_continue_scope_or_attribute_state,
    insert_symbol_node,
    get_bracketed_identifier_token,
    push_continue_attribute_state,
    push_continue_scope_state,
    insert_member_node,
    insert_unknown_operand_node,
    add_one_bracket,
    get_comment_token,
    dialog_call,
    copy_the_operator,
    restore_the_sign,
    rewind_to_same_token,
    signal_internal_error,
    return_to_operand,
    pop_previous_state,
    insert_empty_text_node,
    return_one_more,
    push_identifier_state,
    change_operand_to_symbol_node,
    return_to_expression,
    dialog_return,
    push_quoted_state,
    set_line_break_flag,
    push_bracketed_identifier_state,
    return_to_scope,
    move_op1_to_op2,
    insert_operator_node,
    close_one_bracket,
    change_to_call_node,
    push_call_state,
    push_arguments_state,
    ready_for_op3_field,
    return_to_arguments,
    ready_for_modifier_field,
    get_modifier_token,
    confirm_modifier_specified,
    push_modifier_state,
    insert_empty_node_if_needed,
    insert_close_node,
    insert_else_node,
    insert_end_if_node,
    insert_end_for_node,
    insert_end_macro_node,
    insert_end_function_node,
    insert_end_new_node,
    insert_end_while_node,
    insert_output_node,
    insert_append_node,
    insert_echo_node,
    insert_abort_node,
    push_define_state,
    insert_define_node,
    push_implicit_assign_or_invoke_state,
    push_macro_state,
    insert_macro_node,
    insert_function_node,
    insert_return_node,
    push_invoke_state,
    insert_call_node,
    insert_gsl_node,
    insert_source_node,
    get_script_token,
    insert_direct_node,
    insert_javascript_node,
    push_xml_state,
    insert_xml_node,
    insert_template_node,
    insert_end_template_node,
    push_save_state,
    insert_save_node,
    insert_if_node,
    insert_elsif_node,
    push_locator_state,
    insert_new_node,
    insert_move_node,
    insert_copy_node,
    push_load_state,
    insert_delete_node,
    push_for_state,
    insert_for_node,
    insert_while_node,
    insert_next_node,
    insert_last_node,
    push_sort_state,
    insert_sort_node,
    ready_for_pretty_field,
    ready_for_format_field,
    push_new_state,
    expect_end_of_line,
    error_if_empty_expression,
    return_to_operator,
    signal_invalid_token
};

