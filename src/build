#! /bin/sh
#
#   Build script for iMatix GSLgen Code Generator, for generic UNIX.
#   Requires the iMatix 'c' shell script.
#
#   Generated by Otto v2.2 from buildgsl.txt on 100/02/20, 15:35:59
#   For more info see Otto documentation at http://www.imatix.com.
#   Bug reports & questions to <ph@imatix.com>
#   ---------------------------------------------------------------
#
test -f c && chmod +x c
echo 'Building the iMatix GSLgen Code Generator'
echo 'Press [Enter] to continue, or Ctrl-C to abort.'
if test "$1" = ""; then read pause; fi
echo 'Checking for required files...'

#-  require $LIB libsfl
if test ! -f libsfl.a -a ! -f /usr/lib/libsfl.a ; then
    echo libsfl.a missing - aborting
    exit
fi

#-  require ggcode.c ggcode.l ggcode.d ggcode.i ggcode.h
if test ! -f ggcode.c; then
    echo ggcode.c missing - aborting
    exit
fi
if test ! -f ggcode.l; then
    echo ggcode.l missing - aborting
    exit
fi
if test ! -f ggcode.d; then
    echo ggcode.d missing - aborting
    exit
fi
if test ! -f ggcode.i; then
    echo ggcode.i missing - aborting
    exit
fi
if test ! -f ggcode.h; then
    echo ggcode.h missing - aborting
    exit
fi

#-  require ggpars.c ggpars.l ggpars.d ggpars.i ggpars.h
if test ! -f ggpars.c; then
    echo ggpars.c missing - aborting
    exit
fi
if test ! -f ggpars.l; then
    echo ggpars.l missing - aborting
    exit
fi
if test ! -f ggpars.d; then
    echo ggpars.d missing - aborting
    exit
fi
if test ! -f ggpars.i; then
    echo ggpars.i missing - aborting
    exit
fi
if test ! -f ggpars.h; then
    echo ggpars.h missing - aborting
    exit
fi

#-  require gslgen.c gslgen.l gslgen.d gslgen.i
if test ! -f gslgen.c; then
    echo gslgen.c missing - aborting
    exit
fi
if test ! -f gslgen.l; then
    echo gslgen.l missing - aborting
    exit
fi
if test ! -f gslgen.d; then
    echo gslgen.d missing - aborting
    exit
fi
if test ! -f gslgen.i; then
    echo gslgen.i missing - aborting
    exit
fi

#-  require ggeval.c ggeval.h
if test ! -f ggeval.c; then
    echo ggeval.c missing - aborting
    exit
fi
if test ! -f ggeval.h; then
    echo ggeval.h missing - aborting
    exit
fi

#-  require ggcomm.c ggcomm.h
if test ! -f ggcomm.c; then
    echo ggcomm.c missing - aborting
    exit
fi
if test ! -f ggcomm.h; then
    echo ggcomm.h missing - aborting
    exit
fi

#-  require ggobjt.c ggobjt.h
if test ! -f ggobjt.c; then
    echo ggobjt.c missing - aborting
    exit
fi
if test ! -f ggobjt.h; then
    echo ggobjt.h missing - aborting
    exit
fi

#-  require ggfunc.c ggfunc.h
if test ! -f ggfunc.c; then
    echo ggfunc.c missing - aborting
    exit
fi
if test ! -f ggfunc.h; then
    echo ggfunc.h missing - aborting
    exit
fi

#-  require ggfile.c ggfile.h
if test ! -f ggfile.c; then
    echo ggfile.c missing - aborting
    exit
fi
if test ! -f ggfile.h; then
    echo ggfile.h missing - aborting
    exit
fi

#-  require ggstrn.c ggstrn.h
if test ! -f ggstrn.c; then
    echo ggstrn.c missing - aborting
    exit
fi
if test ! -f ggstrn.h; then
    echo ggstrn.h missing - aborting
    exit
fi

#-  require license.txt
if test ! -f license.txt; then
    echo license.txt missing - aborting
    exit
fi

#-  delete $lib libgsl
rm -f libgsl.a

#-  library libgsl
CCLIBNAME=libgsl
export CCLIBNAME

#-  compile ggcode ggpars ggeval ggcomm ggobjt ggfunc ggfile ggstrn
./c ggcode
test $? -ne 0 && exit 1
./c -q -r libgsl ggcode
rm ggcode.o
./c ggpars
test $? -ne 0 && exit 1
./c -q -r libgsl ggpars
rm ggpars.o
./c ggeval
test $? -ne 0 && exit 1
./c -q -r libgsl ggeval
rm ggeval.o
./c ggcomm
test $? -ne 0 && exit 1
./c -q -r libgsl ggcomm
rm ggcomm.o
./c ggobjt
test $? -ne 0 && exit 1
./c -q -r libgsl ggobjt
rm ggobjt.o
./c ggfunc
test $? -ne 0 && exit 1
./c -q -r libgsl ggfunc
rm ggfunc.o
./c ggfile
test $? -ne 0 && exit 1
./c -q -r libgsl ggfile
rm ggfile.o
./c ggstrn
test $? -ne 0 && exit 1
./c -q -r libgsl ggstrn
rm ggstrn.o

#-  library

#-  compile gslgen
./c gslgen
test $? -ne 0 && exit 1

#-  link    gslgen
./c -L gslgen

# -- end script without errors
exit 0
